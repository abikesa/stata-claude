/**************************************************************************
 🔁 just-click.do – Fully terminal-native, auto-organizing Stata workflow
 Fixed version that properly moves files to organized folders
**************************************************************************/

* 🌐 Load paths from config
do https://raw.githubusercontent.com/abikesa/stata-claude/refs/heads/main/scripts/config.do

* ❤️ Create clean folder structure with better naming
local folders data output scripts docs
foreach f of local folders {
    !mkdir -p "`f'"
}

* 🧹 Move .dta files to /data
!find . -maxdepth 1 -name "*.dta" -exec mv -v {} data/ \;

* 🧹 Move .do files (except this one) to /scripts  
!find . -maxdepth 1 -name "*.do" ! -name "just-click.do" -exec mv -v {} scripts/ \;

* 🧹 Move .sh, .py, .ipynb scripts to /scripts
!find . -maxdepth 1 \( -name "*.sh" -o -name "*.py" -o -name "*.ipynb" \) -exec mv -v {} scripts/ \;

* 🧹 Move .log files to /output
!find . -maxdepth 1 -name "*.log" -exec mv -v {} output/ \;

* 📝 Create a basic README in docs
!echo "# Project Documentation" > docs/README.md
!echo "" >> docs/README.md
!echo "This folder contains project documentation and notes." >> docs/README.md
!echo "Generated by just-click.do on `date`" >> docs/README.md

* 🌀 Reset Stata session + begin logging
clear all
log using "output/analysis_output.log", replace

* 🐬 Load data and merge (if data files exist)
capture {
    use "data/transplants.dta", clear
    merge 1:1 fake_id using "data/donors_recipients.dta"
    drop if _merge != 3
    
    * 🔁 Time-to-event setup
    gen over50 = age > 50
    gen f_time = end_d - transplant_d
    format transplant_d end_d %td
    stset f_time, failure(died)
    
    * 📊 Graph survival by age
    sts graph, by(over50)
    graph export "output/survival_over50.png", replace
}

* ✅ Move this script and current log to their destinations
log close
!mv -v "just-click.do" scripts/
!mv -v "just-click.log" output/ 2>/dev/null || true

* 📦 Create file manifest
!echo "# File Organization Summary" > output/manifest.txt
!echo "Generated on: `date`" >> output/manifest.txt
!echo "" >> output/manifest.txt
!echo "## Data Files:" >> output/manifest.txt
!ls -la data/ >> output/manifest.txt 2>/dev/null || echo "No data files found" >> output/manifest.txt
!echo "" >> output/manifest.txt
!echo "## Script Files:" >> output/manifest.txt
!ls -la scripts/ >> output/manifest.txt 2>/dev/null || echo "No script files found" >> output/manifest.txt
!echo "" >> output/manifest.txt
!echo "## Output Files:" >> output/manifest.txt
!ls -la output/ >> output/manifest.txt 2>/dev/null || echo "No output files found" >> output/manifest.txt
!echo "" >> output/manifest.txt
!echo "## Documentation:" >> output/manifest.txt
!ls -la docs/ >> output/manifest.txt 2>/dev/null || echo "No documentation files found" >> output/manifest.txt

* 📦 Optional: Tree view if available
!which tree >/dev/null 2>&1 && tree -h > output/directory_tree.txt || echo "Tree command not available" > output/directory_tree.txt

noi di as result "✅ All done! Files organized into:"
noi di as result "   📁 data/    - All .dta files"
noi di as result "   📁 scripts/ - All .do, .sh, .py files"  
noi di as result "   📁 output/  - All .log files and results"
noi di as result "   📁 docs/    - README and documentation"
noi di as result ""
noi di as result "🚀 Ready to zip and send back!"
noi di as result "   Run: tar -czf project_organized.tar.gz data scripts output docs"

* 📦 Auto-package everything into ukb-project.tar.gz
!tar -czf ukb-project.tar.gz data scripts output docs
!rm -rf data scripts output docs
noi di as result "✅ Created ukb-project.tar.gz - ready to send!"